{"v":"5.12.2","fr":30,"ip":0,"op":155,"w":1920,"h":1080,"nm":"...... Comp. 1","ddd":0,"assets":[],"fonts":{"list":[{"fName":"Bahnschrift","fFamily":"Bahnschrift","fStyle":"Regular","ascent":70.99609375}]},"layers":[{"ddd":0,"ind":1,"ty":5,"nm":"......","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.254],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":39,"s":[0]},{"t":61,"s":[-43]}],"ix":10},"p":{"a":0,"k":[956,541.784,0],"ix":2,"l":2},"a":{"a":0,"k":[-0.321,-6.731,0],"ix":1,"l":2},"s":{"a":0,"k":[156,156,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [XAT] Controls","np":14,"mn":"Pseudo/MHAC PrCtrl XAT 4","ix":1,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl XAT 4-0001","ix":1,"v":{"a":0,"k":[0,100],"ix":1}},{"ty":0,"nm":"Rotation","mn":"Pseudo/MHAC PrCtrl XAT 4-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":3,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl XAT 4-0003","ix":3,"v":{"a":0,"k":[0,0],"ix":3}},{"ty":0,"nm":"Opacity","mn":"Pseudo/MHAC PrCtrl XAT 4-0004","ix":4,"v":{"a":0,"k":100,"ix":4}},{"ty":0,"nm":"Delay","mn":"Pseudo/MHAC PrCtrl XAT 4-0005","ix":5,"v":{"a":0,"k":40,"ix":5}},{"ty":0,"nm":"Frequency","mn":"Pseudo/MHAC PrCtrl XAT 4-0006","ix":6,"v":{"a":0,"k":100,"ix":6}},{"ty":0,"nm":"Decay","mn":"Pseudo/MHAC PrCtrl XAT 4-0007","ix":7,"v":{"a":0,"k":50,"ix":7}},{"ty":7,"nm":"Reversed Order","mn":"Pseudo/MHAC PrCtrl XAT 4-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":7,"nm":"Randomized Order","mn":"Pseudo/MHAC PrCtrl XAT 4-0009","ix":9,"v":{"a":0,"k":0,"ix":9}},{"ty":0,"nm":"Random Start Value - Min","mn":"Pseudo/MHAC PrCtrl XAT 4-0010","ix":10,"v":{"a":0,"k":100,"ix":10}},{"ty":0,"nm":"Random Start Value - Max","mn":"Pseudo/MHAC PrCtrl XAT 4-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":0,"nm":"Random Seed","mn":"Pseudo/MHAC PrCtrl XAT 4-0012","ix":12,"v":{"a":0,"k":5,"ix":12}}]}],"t":{"d":{"k":[{"s":{"s":80,"f":"Bahnschrift","t":"......","ca":0,"j":2,"tr":-10,"lh":77,"ls":0,"fc":[1,1,1]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[{"nm":"AC IN [XAT] Overshoot","s":{"t":1,"b":1,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    var MH = {};\n    var mhRseed = 1;\n    MH.srand = function mhRandSeed(seed, timeless) {\n        mhRseed = Math.abs(Math.floor(seed));\n        if (typeof timeless == 'undefined' || !timeless) {\n            mhRseed = $bm_sum(mhRseed, $bm_mod(Math.floor($bm_mul(time, 1103515245)), 1073741823));\n        }\n        mhRseed &= 1073741823;\n        for (var i = 0; i < 5; ++i) {\n            mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        }\n    };\n    MH.rand = function mhRand(limit1, limit2) {\n        mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        var r = $bm_div(mhRseed, 1073741823);\n        if (typeof limit2 == 'undefined') {\n            if (typeof limit1 == 'undefined') {\n                return r;\n            } else {\n                return $bm_mul(r, limit1);\n            }\n        } else {\n            return $bm_sum($bm_mul(r, $bm_sub(limit2, limit1)), limit1);\n        }\n    };\n    function acCheckboxValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValSet(val) {\n        acAccS = val;\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = $bm_div($bm_mul(a, Math.cos($bm_mul($bm_mul($bm_mul(t, f), Math.PI), 2))), Math.exp($bm_mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return $bm_mul(y, $bm_sub(1, $bm_div($bm_sub(t, 0.8), 0.2)));\n    }\n    function upACo(ac, tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {\n        'en': false,\n        'fade': 0\n    };\n    var acI = {\n        'en': false,\n        'fade': 0\n    };\n    var acO = {\n        'en': false,\n        'fade': 0\n    };\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccS = null;\n    if (tTrI !== null && t < tTrI) {\n        upACo(acI, bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        acI.fade = $bm_sub(1, acI.fade);\n    }\n    ac = acI;\n    acPD('AC IN [XAT] Controls');\n    (function () {\n        if (ac.en) {\n            function mhOvershootRig1(allDimensionsEqual, ignoreRandomStartVal, overrideRandomOrderSeed, overrideRandomStartValueSeed) {\n                var d = $bm_div($bm_div(acSliderValP('AC IN [XAT] Controls', 'Delay', 50), 100), textTotal);\n                var a = $bm_sub(1, $bm_mul(d, $bm_sub(textTotal, 1)));\n                var i = acCheckboxValP('AC IN [XAT] Controls', 'Reversed Order', 0) == 1 ? $bm_sum($bm_sub(textTotal, textIndex), 1) : $bm_sub(textIndex, 1);\n                if (acCheckboxValP('AC IN [XAT] Controls', 'Randomized Order', 0) == 1) {\n                    var seed = $bm_sum(textIndex, acSliderValP('AC IN [XAT] Controls', 'Random Seed', 1));\n                    if (typeof overrideRandomOrderSeed == 'undefined' || !overrideRandomOrderSeed) {\n                        seedRandom(1, true);\n                        seed = $bm_sum(seed, random(0, 1000));\n                    } else {\n                        seed = $bm_sum(seed, overrideRandomOrderSeed);\n                    }\n                    MH.srand(seed, true);\n                    i = MH.rand(textTotal);\n                }\n                var ta = $bm_mul(i, d);\n                var x = $bm_sub(1, ac.fade);\n                var r = 0;\n                if (x > $bm_sum(ta, a))\n                    r = 0;\n                else if (x < ta)\n                    r = 1;\n                else\n                    r = mhOvershoot($bm_div($bm_sub(x, ta), a), 1, $bm_div(acSliderValP('AC IN [XAT] Controls', 'Frequency', 100), 100), $bm_div(acSliderValP('AC IN [XAT] Controls', 'Decay', 40), 10));\n                if (typeof ignoreRandomStartVal == 'undefined')\n                    var ignoreRandomStartVal = false;\n                var minX = ignoreRandomStartVal ? 100 : acSliderValP('AC IN [XAT] Controls', 'Random Start Value - Min', 100);\n                var maxX = ignoreRandomStartVal ? 100 : acSliderValP('AC IN [XAT] Controls', 'Random Start Value - Max', 100);\n                if (!ignoreRandomStartVal) {\n                    var seed = $bm_sum(textIndex, acSliderValP('AC IN [XAT] Controls', 'Random Seed', 1));\n                    if (typeof overrideRandomStartValueSeed == 'undefined' || !overrideRandomStartValueSeed) {\n                        seedRandom(2, true);\n                        seed = $bm_sum(seed, random(0, 1000));\n                    } else {\n                        seed = $bm_sum(seed, overrideRandomStartValueSeed);\n                    }\n                    MH.srand(seed, true);\n                }\n                if (typeof allDimensionsEqual == 'undefined')\n                    var allDimensionsEqual = false;\n                if (allDimensionsEqual)\n                    acValSet($bm_mul($bm_mul([\n                        1,\n                        1,\n                        1\n                    ], MH.rand(minX, maxX)), r));\n                else\n                    acValSet($bm_mul([\n                        MH.rand(minX, maxX),\n                        MH.rand(minX, maxX),\n                        MH.rand(minX, maxX)\n                    ], r));\n            }\n            mhOvershootRig1(false, false, 1, 1);\n        }\n    }());\n    v = thisProperty.value;\n    if (acAccS !== null) {\n        v = acAccS;\n    }\n    return v;\n}\n$bm_rt = result;"},"a":{"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    (function () {\n        acValAdd(acPointValP('AC IN [XAT] Controls', 'Position', [\n            0,\n            100\n        ]));\n    }());\n    return v;\n}\n$bm_rt = result;"},"s":{"a":0,"k":[0,0,100],"ix":3,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    (function () {\n        acValAdd(acPointValP('AC IN [XAT] Controls', 'Scale', [\n            0,\n            0\n        ]));\n    }());\n    return v;\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":8,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    (function () {\n        acValAdd(acAngleValP('AC IN [XAT] Controls', 'Rotation', 0));\n    }());\n    return v;\n}\n$bm_rt = result;"},"o":{"a":0,"k":0,"ix":9,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    (function () {\n        acValAdd(acSliderValP('AC IN [XAT] Controls', 'Opacity', 100));\n    }());\n    return v;\n}\n$bm_rt = result;"}}}]},"ip":0,"op":155,"st":0,"ct":1,"bm":0}],"markers":[],"props":{},"chars":[{"ch":".","size":80,"style":"Regular","w":22.66,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[16.553,0],[16.553,-10.449],[6.104,-10.449],[6.104,0]],"c":true},"ix":2},"nm":".","mn":"ADBE Vector Shape - Group","hd":false}],"nm":".","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"Bahnschrift"}]}